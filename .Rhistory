setwd("C:/Users/rkaku/OneDrive/Desktop/deployR/heroku-docker-r-plumber-app")
library(tidyquant)
quantmod::getSymbols('TCS.NS')
TCS.NS
head(TCS.NS)
library(quantmod)
tcs -> getSymbols(Symbols = 'TCS.NS', auto.assign = FALSE)
tcs -> getSymbols(Symbols = 'TCS.NS', auto.assign = FALSE)
tcs -> getSymbols(Symbols = 'TCS.NS', auto.assign = FALSE)
tcs -> as.data.frame(tcs)
tcs -> getSymbols(Symbols = 'TCS.NS', auto.assign = FALSE, from='2021-06-21')
getSymbols(Symbols = 'TCS.NS', auto.assign = FALSE, from='2021-06-21')
getSymbols(Symbols = 'TCS.NS', auto.assign = TRUE, from='2021-06-21')
rand <- rnorm(100)
tcs <- getSymbols(Symbols = 'TCS.NS', auto.assign = TRUE, from='2021-06-21')
tcs <-  as.data.frame(tcs)
tcs <- getSymbols(Symbols = 'TCS.NS', auto.assign = TRUE, from='2021-06-21')
head(tcs)
get(tcs)
tcs <- get(tcs)
tcs <- getSymbols(Symbols = 'TCS.NS', auto.assign = TRUE, from='2021-06-21')
tcs <- getSymbols(Symbols = 'TCS.NS', auto.assign = FALSE, from='2021-01-21')
chartSeries(x = tcs, TA = NULL)
install.packages('quantmod')
install.packages("quantmod")
install.packages('quantmod')
library(quantmod)
tcs <- tq_get('TCS.NS',
get = "stock.prices",
from = '2021-06-21',
)
library(tidyquant)
tcs <- tq_get('TCS.NS',
get = "stock.prices",
from = '2021-06-21',
)
tcs
remove.packages("tidyquant", lib="~/R/win-library/4.0")
install.packages('tidyquant')
install.packages("tidyquant")
install.packages('quantmod')
library(quantmod)
tcs <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01')
final <- data.frame(date=index(tcs), coredata(tcs))
final
final <- data.frame(date=index(tcs), value=coredata(master_1)[,])
tcs <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01')
final <- data.frame(date=index(tcs), value=coredata(tcs)[,])
final <- fortify.zoo(tcs)
tcs <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01')
tcs <- fortify.zoo(getSymbols(Symbols = 'TCS.NS', from='2021-01-01'))
tcs <- fortify.zoo(getSymbols(Symbols = 'TCS.NS', from='2021-01-01', auto.assign = FALSE))
tcs <- fortify.zoo(getSymbols(Symbols = 'TCS.NS', from='2021-01-01', auto.assign = FALSE))
tcs
stockPrice$index
stockPrice <- fortify.zoo(getSymbols(Symbols = ticker, from='2021-01-01', auto.assign = FALSE))
stockPrice <- fortify.zoo(getSymbols(Symbols = 'TCS.NS', from='2021-01-01', auto.assign = FALSE))
colnames(stockPrice$index) <- c('date')
names(stockPrice$index)
names(stockPrice$index) <- 'date'
stockPrice$index
colnames(stockPrice)
stockPrice$Index
names(stockPrice$Index)
colnames(stockPrice$Index)
colnames(stockPrice)[colnames(stockPrice) == 'Index'] <- 'Date'
colnames(stockPrice)
test <- "tcs,infy,rel"
tet <- strsplit(x = test, split = ",")
tet
tet <- strsplit(x = test, split = ",")[[1]]
tet
new <- c("1", "2", "3")
new
tickervector <- strsplit("TCS.NS, INFY.NS", ",")[[1]]
stockPrices <- fortify.zoo(getSymbols(Symbols = tickervector, from="2021-01-01", auto.assign = FALSE))
library(quantmod)
stockPrices <- fortify.zoo(getSymbols(Symbols = tickervector, from="2021-01-01", auto.assign = FALSE))
test <- getSymbols(Symbols = tickervector, from="2021-01-01", auto.assign = FALSE)
test <- list()
test <- getSymbols(Symbols = tickervector, from="2021-01-01", auto.assign = FALSE)
Stocks = lapply(Symbols, function(sym) {
dailyReturn(na.omit(getSymbols(sym, from=StartDate, auto.assign=FALSE)))
})
library(tidyquant)
tq_get(tickervector, from="2021-01-01")
test <- tq_get(tickervector, from="2021-01-01")
test
tail(test)
tickervector <- strsplit("TCS.NS,INFY.NS", ",")[[1]]
test <- tq_get(tickervector, from="2021-01-01")
tail(test)
test <- c("tcs", " rakesh")
trimws(test, which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
library(quantmod)
test <- getSymbols('TATAPOWER.NS')
test <- getSymbols('TATAPOWER.NS', auto.assign = FALSE)
get(test)
test
head(test)
chartSeries(getSymbols(Symbols = test, from='2021-01-01', up.col = 'green',
down.col = 'red', auto.assign = FALSE),
theme=chartTheme('white'))
chartSeries(getSymbols(Symbols = test, from='2021-01-01', up.col = 'green',
down.col = 'red', auto.assign = TRUE),
theme=chartTheme('white'))
chartSeries(getSymbols(Symbols = 'TCS.NS', from='2021-01-01', up.col = 'green',
down.col = 'red', auto.assign = TRUE),
theme=chartTheme('white'))
test <- getSymbols('TATAPOWER.NS', auto.assign = FALSE)
chartSeries(test,theme=chartTheme('white'))
addBBands(n = 4, sd = 2)
addBBands(n = 20, sd = 2)
chartSeries(test,theme=chartTheme('white'))
addBBands(n = 40, sd = 2)
library(quantmod)
getSymbols('TCS.NS')
chartSeries(TCS.NS)
chartSeries(TCS.NS, type = 'candlesticks')
chartSeries(TCS.NS)
chartSeries(TCS.NS) + addBBands(n=40, sd=2)
chartSeries(TCS.NS) %>% addBBands(n=40, sd=2)
library(magrittr)
chartSeries(TCS.NS) %>% addBBands(n=40, sd=2)
chartSeries(TCS.NS,TA=c(addVo(),addBBands()))
chartSeries(TCS.NS,TA=c(addVo(),addBBands(n=100, sd=2)))
library(quantmod)
stockChart <- getSymbols(Symbols = 'TCS,NS', from='2021-01-01',auto.assign = FALSE)
chartSeries(stockChart, TA=c(addVo(),addBBands(n=bandduration, sd=sd)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
stockChart <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01',auto.assign = FALSE)
chartSeries(stockChart, TA=c(addVo(),addBBands(n=bandduration, sd=sd)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
chartSeries(stockChart, TA=c(addVo(),addBBands(n=40, sd=2)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
stockChart <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01',auto.assign = FALSE)
band<- 20
std <- 2
chartSeries(stockChart, TA=c(addVo(),addBBands(n=band, sd=std)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
stockChart <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01',auto.assign = FALSE)
chartSeries(stockChart, TA=c(addVo(),addBBands(n=band, sd=std)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
band<- 20
std <- 2
chartSeries(stockChart, TA=c(addVo(),addBBands(n=band, sd=std)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
sma <-SMA(Cl(stockChart),n=20)
plot(sma)
tcs <- getSymbols(Symbols = 'TCS.NS', from='2021-01-01',auto.assign = FALSE)
sma20 <-SMA(Cl(tcs),n=20)
sma200 <- SMA(Cl(tcs),n=200)
sma200 <- SMA(Cl(tcs),n=50)
plot(sma20, sma200)
plot( sma200)
sma20
sma50
sma200
rbind(sma20, sma200)
plot(rbind(sma20, sma200))
cbind(sma20, sma200)
plot(cbind(sma20, sma200))
tcs <- getSymbols(Symbols = 'TCS.NS', from='2020-01-01',auto.assign = FALSE)
sma20 <-SMA(Cl(tcs),n=20)
tcs
install.packages("imputeTS")
library(imputeTS)
na_mean(x = tcs)
newtcs <- na_mean(x = tcs)
any(is.na(newtcs))
sma20 <-SMA(Cl(tcs),n=20)
sma20 <-SMA(Cl(newtcs),n=20)
sma200 <-SMA(Cl(newtcs),n=200)
plot(cbind(sma20, sma200))
tcs <- getSymbols(Symbols = 'TATAMOTOS.NS', from='2020-01-01',auto.assign = FALSE)
tcs <- getSymbols(Symbols = 'TATAMOTORS.NS', from='2020-01-01',auto.assign = FALSE)
newtcs <- na_mean(x = tcs)
any(is.na(newtcs))
sma20 <-SMA(Cl(newtcs),n=20)
sma200 <-SMA(Cl(newtcs),n=200)
plot(cbind(sma20, sma200))
sma50 <- SMA(Cl(newtcs),n=50)
plot(cbind(sma20, sma50, sma200))
ts.plot(cbind(sma20, sma50, sma200))
ts.plot(cbind(sma20, sma50, sma200), gpars = list(col = c("red","blue", "green")))
newtcs <- na_interpolation(x = tcs)
any(is.na(newtcs))
sma20 <-SMA(Cl(newtcs),n=20)
sma50 <- SMA(Cl(newtcs),n=50)
sma20
sma200 <-SMA(Cl(newtcs),n=200)
plot(cbind(sma20, sma50, sma200))
ts.plot(cbind(sma20, sma50, sma200), gpars = list(col = c("red","blue", "green")))
plot(cbind(sma20, sma50, sma200))
allplots <- cbind(sma20, sma50, sma200)
plot(allplots)
tcs <- getSymbols(Symbols = 'ADANIPORTS.NS', from='2020-01-01',auto.assign = FALSE)
chartSeries(tcs, TA=c(addVo(),addBBands(n=20, sd=2)),
up.col = 'green', down.col = 'red',
theme=chartTheme('white'))
newtcs <- na_interpolation(x = tcs)
any(is.na(newtcs))
sma20 <-SMA(Cl(newtcs),n=20)
sma50 <- SMA(Cl(newtcs),n=50)
sma20
sma200 <-SMA(Cl(newtcs),n=200)
allplots <- cbind(sma20, sma50, sma200)
plot(allplots)
allplots <- cbind(tcs, sma20, sma50, sma200)
plot(allplots)
allplots
allplots <- cbind(tcs$ADANIPORTS.NS.Close, sma20, sma50, sma200)
plot(allplots)
allplots <- cbind(tcs$ADANIPORTS.NS.Close, sma50, sma200)
plot(allplots)
tcs <- getSymbols(Symbols = 'ADANIPORTS.NS', from='2019-01-01',auto.assign = FALSE)
newtcs <- na_interpolation(x = tcs)
any(is.na(newtcs))
sma20 <-SMA(Cl(newtcs),n=20)
sma50 <- SMA(Cl(newtcs),n=50)
sma20
sma200 <-SMA(Cl(newtcs),n=200)
allplots <- cbind(tcs$ADANIPORTS.NS.Close, sma50, sma200)
plot(allplots)
options("getSymbols.warning4.0"=FALSE)
from ="2012-01-01"
to ="2012-12-31"
symbols = c("IBM","MSFT")
getSymbols(symbols, from=from, to=to,
adjust=TRUE)
currency("USD")
.blotter <-new.env()
.strategy <-new.env()
strategy.st <- "SMA"
portfolio.st <- "SMA"
account.st <- "SMA"
rm.strat(strategy.st)
install.packages("devtools")
library(devtools)
install.packages("FinancialInstrument")
devtools::install_github("braverock/blotter")
devtools::install_github("braverock/blotter")
devtools::install_github("braverock/quantstrat")
library(devtools)
devtools::install_github("braverock/blotter")
